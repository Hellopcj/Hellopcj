<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>蒲Annie的博客</title>
  <icon>https://www.gravatar.com/avatar/1b1060c5a2544f4ae03788a00f7c2c93</icon>
  <subtitle>Android开发程序媛，欢迎随时撩我</subtitle>
  <link href="/Hellopcj/atom.xml" rel="self"/>
  
  <link href="https://hellopcj.github.io/Hellopcj/"/>
  <updated>2017-10-10T06:25:23.000Z</updated>
  <id>https://hellopcj.github.io/Hellopcj/</id>
  
  <author>
    <name>蒲Annie_</name>
    <email>litten225@qq.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>MAC系统下编译FFmpeg-Android （从编译到移植Androidstudio成功）(一)</title>
    <link href="https://hellopcj.github.io/Hellopcj/2017/09/22/view/"/>
    <id>https://hellopcj.github.io/Hellopcj/2017/09/22/view/</id>
    <published>2017-09-22T07:18:11.000Z</published>
    <updated>2017-10-10T06:25:23.000Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;大家好，因为我最近突然对Android的音频产生了浓厚的兴趣，所以带来了今天这篇文章。（打包过程都是我自己一步一步操作，所以比较详细） 作为老牌音频剪辑的FFmpeg 被广泛的应用，包括美拍等短视频编辑都是用的FFmpeg，可以说很多的Android处理音视频都是用的FFmpeg&lt;/p&gt;
&lt;h3 id=&quot;什么是FFmpeg？为什么选择FFmpeg？&quot;&gt;&lt;a href=&quot;#什么是FFmpeg？为什么选择FFmpeg？&quot; class=&quot;headerlink&quot; title=&quot;什么是FFmpeg？为什么选择FFmpeg？&quot;&gt;&lt;/a&gt;什么是FFmpeg？为什么选择FFmpeg？&lt;/h3&gt;&lt;p&gt;FFmpeg是一套比较完善的音视频编解码框架，里面包含了整套诸如格式转换，音视频录制的解决方案。使用FFmpeg可以对音视频进行渲染和合成等操作，FFmpeg的功能非常强大，不仅可以采集图像，对屏幕进行录制，同时还支持以RTP方式将视频流传送给支持RTSP的流媒体服务器，支持直播应用。 FFmpeg具有很强的可移植性，可以在移植到不同操作系统 支持linux ，windows，OS X&lt;br&gt;在编译的时候 可以根据操作系统的不同下载不同操作系统的资源包。本文为mac系统,&lt;/p&gt;
    
    </summary>
    
      <category term="Android音频" scheme="https://hellopcj.github.io/Hellopcj/categories/Android%E9%9F%B3%E9%A2%91/"/>
    
    
  </entry>
  
  <entry>
    <title>Facebook rebond 弹簧功能源码分析</title>
    <link href="https://hellopcj.github.io/Hellopcj/2017/09/14/rebond/"/>
    <id>https://hellopcj.github.io/Hellopcj/2017/09/14/rebond/</id>
    <published>2017-09-13T16:00:00.000Z</published>
    <updated>2017-10-10T01:40:01.000Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;相信大家在项目上或多或少的用到了弹簧功能，比较常用和方便的就是facebook的开源库rebond,想要深入的了解这个开源库的使用方法就需要我们源码分析（read the fucking source code！）整个开源库的功能实现。我自己也通过rebond写了个demo 有兴趣的可以下载了解下（代码都有注释 适合菜鸟初学者了解 大神略过）&lt;/p&gt;
&lt;p&gt;废话不多说，下面我们就开始分析源代码（very fucking detailed！）&lt;/p&gt;
&lt;h3 id=&quot;rebond的配置&quot;&gt;&lt;a href=&quot;#rebond的配置&quot; class=&quot;headerlink&quot; title=&quot;rebond的配置&quot;&gt;&lt;/a&gt;rebond的配置&lt;/h3&gt;&lt;p&gt;  在gradle 进行配置： &lt;/p&gt;
&lt;figure class=&quot;highlight gradle&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;dependencies&lt;/span&gt; &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;compile&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;com.facebook.rebound:rebound:0.3.8&#39;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;  或者maven部署rebond库&lt;/p&gt;
&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;com.facebook.rebound&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;rebound&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;0.3.8&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="源码分析" scheme="https://hellopcj.github.io/Hellopcj/categories/%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/"/>
    
    
      <category term="Android source code" scheme="https://hellopcj.github.io/Hellopcj/tags/Android-source-code/"/>
    
  </entry>
  
  <entry>
    <title>超级干货系列 hexo+gihub搭建博客</title>
    <link href="https://hellopcj.github.io/Hellopcj/2017/09/08/a-chrismas-ico/"/>
    <id>https://hellopcj.github.io/Hellopcj/2017/09/08/a-chrismas-ico/</id>
    <published>2017-09-07T16:00:00.000Z</published>
    <updated>2017-09-27T03:56:54.000Z</updated>
    
    <summary type="html">
    
      &lt;!-- HTML方式: 直接在 Markdown 文件中编写 HTML 来调用 --&gt;
&lt;!-- 其中 class=&quot;full-image&quot; 是必须的 --&gt;
&lt;p&gt;&lt;img src=&quot;/Hellopcj/assets/blogimg/blog.png&quot; class=&quot;full-image&quot;&gt;&lt;/p&gt;
&lt;p&gt;相信很多盆友们都想搭建属于自己的博客，但是想要拥有自己独立的服务器和域名还是蛮麻烦的，既要进行网站备案（还不一定能通过）还要自己搞网页的样式等等。 有了gihub就可以轻松搭建自己的博客。&lt;br&gt;gihub+hexo搭建博客的原理大致是这样的， hexo生成本地静态博客 通过hexo与自己的gihub相关联，将自己的静态博客git到自己的gihub中。通过gihub就可以轻松的查看自己的博客。下面就让我们详细的了解下搭建的步骤：&lt;br&gt;
    
    </summary>
    
      <category term="搭建博客" scheme="https://hellopcj.github.io/Hellopcj/categories/%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/"/>
    
    
      <category term="hexo" scheme="https://hellopcj.github.io/Hellopcj/tags/hexo/"/>
    
  </entry>
  
</feed>
